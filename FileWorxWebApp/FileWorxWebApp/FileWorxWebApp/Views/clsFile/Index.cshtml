@using FileWorxWebApp.Models
@model clsFileViewModel

@{
    ViewBag.Title = "Files";
}

@section scripts{
    <script src="~/Scripts/Filter_Scripts/Filter.js"></script>
 
}

<br />

<h3>
    Files
    <small class="text-muted">-News and Photos-</small>
</h3>

<br />

<div>
    
        @Html.ActionLink("New News", "Create", "clsNews", "", new { @class = "btn btn-outline-light" })
        or
        @Html.ActionLink("New Photo", "Create", "clsPhoto", "", new { @class = "btn btn-outline-light" })

   
</div>


<div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed accordion" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne" onclick="showAccordionItem()">
                Filters
            </button>
        </h2>
        <div id="accordionBody" class="accordion-collapse panel" aria-labelledby="headingOne" data-bs-parent="#accordionExample" style=" display:none">
            <div class="accordion-body">
                <div>
                    @using (Html.BeginForm("Index", "clsFile", FormMethod.Post))
                    {
                        <div class="btn-group" role="group" aria-label="Basic radio toggle button group" onchange="toggleDate()">
                            <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked="">
                            <label class="btn btn-outline-primary" for="btnradio1">Exact</label>
                            <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off">
                            <label class="btn btn-outline-primary" for="btnradio2">Interval</label>
                        </div>

                        <div class="row">
                            <div class=" col-auto" id="ExactDateDiv">
                                @Html.Label("Exact Date:", new { @for = "ExactDate" })
                                 <br />
                                @Html.EditorFor(model => model.filter.ExactDateFilter, new { htmlAttributes = new { @type = "datetime-local", @id = "ExactDate" } })
                            </div>
                            <div class=" col-auto" id="IntervalDateDiv" style=" display:none">
                                @Html.Label("Start Date:", new { @for = "StartDate" })
                                <br />
                                @Html.EditorFor(model => model.filter.StartDateFilter, new { htmlAttributes = new { @type = "datetime-local", @id="StartDate"} })
                              <br />
                                @Html.Label("End Date:", new { @for = "EndDate" })
                                <br />
                                 @Html.EditorFor(model => model.filter.EndDateFilter, new { htmlAttributes = new { @type = "datetime-local", @id = "EndDate" } })

                            </div>
                            <div class="col-auto">
                                @Html.Label("Title:", new { @for = "Title" })
                                <br />
                                @Html.EditorFor(model => model.filter.NameFilter, new { htmlAttributes = new { @id = "Title", @width = "100%" } })
                            </div>
                            <div class=" col-auto">
                                @Html.Label("Body:",new {@for="Body" })
                                <br />
                                @Html.TextAreaFor(model => model.filter.BodyFilter, new { @id = "Body" })
                            </div>

                        </div>
                        <br />
                        <button type="submit" class="btn btn-secondary">Filter</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



@if (Model.table.items.Count <= 0)
{
    <h4>There is no item here, add one</h4>
}
else
{
    using (Html.BeginForm("Transfer", "clsFile", FormMethod.Post))
    {
        <table class="table table-striped">
            <caption>Number Of Items: @Model.table.items.Count</caption>
            <tr>
                <th scope="col">
                   Name
                </th>
                
                <th scope="col">
                    Creation Date
                </th >
               
                <th scope="col">
                    Description
                </th>
               

                <th></th>
                <th></th>
            </tr>
            @for (int j=0; j<=Model.table.items.Count-1;j++)
            {
                <tr>
                    <td>
                        
                                @Html.DisplayFor(model => model.table.items[j].name)
                                @Html.HiddenFor(model => model.table.items[j].name)
                       
                    </td>

                       
                    <td>
                       
                                @Html.DisplayFor(model => model.table.items[j].date)
                                @Html.HiddenFor(model => model.table.items[j].date)
                       
                    </td>

                 
                    <td>
                                @Html.DisplayFor(model => model.table.items[j].descripton)
                                @Html.HiddenFor(model => model.table.items[j].descripton)
                        
                    </td>             

                    <td>
                       
                                @Html.HiddenFor(model => model.table.items[j].id)
                       
                    </td>


                    <td>
                        
                                @Html.HiddenFor(model => model.table.items[j].classId)
                      
                    </td>


                    
                <td>
                    @Html.ActionLink("Details", "Details", new { id = Model.table.items[j].id, classID = Model.table.items[j].classId }, new { @class = "btn btn-outline-info" })
                    @Html.ActionLink("Delete", "Delete", new { id = Model.table.items[j].id, classID = Model.table.items[j].classId }, new { @class = "btn btn-outline-danger" })

                </td>
                    <td>
                       
                     @Html.CheckBoxFor(model => model.table.items[j].transfer, new { @class = "form-check-input"})
                        
                    </td>
                </tr>
            }
        </table>

        <button type="submit" class="btn btn-primary" >Transfer Files</button>
    }

}
