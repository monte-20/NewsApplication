@using FileWorxWebApp.Models
@model clsBusinessViewModel

@{
    ViewBag.Title = "Business";
}

@section scripts{
    <script src="~/Scripts/Filter_Scripts/Filter.js" ></script>
}

<br />

<h3>
    Business
    <small class="text-muted">-All Business Files-</small>
</h3>

<br />

<div class="accordion" id="accordionExample">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed accordion" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne" onclick="showAccordionItem()">
                Filters
            </button>
        </h2>
        <div id="accordionBody" class="accordion-collapse panel" aria-labelledby="headingOne" data-bs-parent="#accordionExample" style=" display:none">
            <div class="accordion-body">
                <div>
                    @using (Html.BeginForm("Index", "clsBusiness", FormMethod.Post))
                    {
                        <div class="btn-group" role="group" aria-label="Basic radio toggle button group" onchange="toggleDate()">
                            <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked="">
                            <label class="btn btn-outline-primary" for="btnradio1">Exact</label>
                            <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off">
                            <label class="btn btn-outline-primary" for="btnradio2">Interval</label>
                        </div>

                        <div class="row">
                            <div class="col-auto" id="ExactDateDiv">
                                @Html.Label("Exact Date:", new { htmlAttributes = new { @type = "datetime-local", @for = "ExactDate", @class = "form-label" } })
                                <br />
                                @Html.EditorFor(model => model.filter.ExactDateFilter, new { htmlAttributes = new { @type = "datetime-local",@ID="ExactDate", @class = "form-control" } })
                            </div>
                            <div class="col-auto" id="IntervalDateDiv" style=" display:none">

                                @Html.Label("Start Date:", new { htmlAttributes = new { @type = "datetime-local", @for = "StartDate", @class = "form-label" } })
                                <br/>
                                @Html.EditorFor(model => model.filter.StartDateFilter, new { htmlAttributes = new { @type = "datetime-local", @id = "StartDate", @class = "form-control" } })
                                <br />
                                @Html.Label("End Date:", new { htmlAttributes = new { @type = "datetime-local", @for = "EndDate", @class = "form-label" } })
                                <br />
                                @Html.EditorFor(model => model.filter.EndDateFilter, new { htmlAttributes = new { @type = "datetime-local", @id = "EndDate", @class = "form-control" } })

                            </div>
                            <div class="col-auto">
                                @Html.Label("Title", new { htmlAttributes = new { @type = "datetime-local", @for = "Title", @class = "form-label" } })
                                <br />
                                @Html.EditorFor(model => model.filter.NameFilter, new { htmlAttributes = new { @id = "Title", @class = "form-control" } })
                            </div>
                           
                        </div>
                        <br />
                        <button type="submit" class="btn btn-secondary">Filter</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



@if (Model.list.Items.Count <= 0)
{
    <h4>There is no item here, add one</h4>
}
else
{
<table class="table table-striped">
    <caption>Number Of Items: @Model.list.Items.Count</caption>
    <tr>
        @for (int i = 0; i <= Model.list.Items[0].Values.Count - 3; i++)
        {

            <th>
                @Html.DisplayFor(model => model.list.Items[0].Values[i].Header)
            </th>
            <th></th>
        }
        <th></th>
    </tr>
    @foreach (var item in Model.list.Items)
    {
        <tr>
            @for (int i = 0; i <= Model.list.Items[0].Values.Count - 3; i++)
            {

                <td>
                    <div class="form-check">
                        @Html.DisplayFor(model => item.Values[i].Value)
                    </div>
                </td>

                <td></td>

            }
        <td>
            @Html.ActionLink("Delete", "Delete", new { id = item.Values[item.Values.Count - 2].Value }, new { @class = "btn btn-outline-danger" })
        </td>
        </tr>
    }

</table>
}